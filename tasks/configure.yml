---

- name: "Load OS vars"
  include_tasks: vars.yml

- name: Template configuration file to server.properties
  template:
    src: server.properties.j2
    dest: '{{ kafka_dir }}/config/server.properties'
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0644
  notify:
    - Restart kafka service
  when: not kafka_use_kraft
  tags:
    - kafka_config

- name: Template kraft configuration file to server.properties
  template:
    src: kraft-server.properties.j2
    dest: '{{ kafka_dir }}/config/kraft/server.properties'
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0644
  notify:
    - Restart kafka service
  when: kafka_use_kraft
  tags:
    - kafka_config

- name: Template configuration file to zookeeper.properties
  template:
    src: zookeeper.properties.j2
    dest: '{{ kafka_dir }}/config/zookeeper.properties'
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0644
  when: not kafka_use_kraft
  tags:
    - kafka_config

- name: Template configuration file to connect-standalone.properties
  template:
    src: connect-standalone.properties.j2
    dest: '{{ kafka_dir }}/config/connect-standalone.properties'
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0644
  tags:
    - kafka_config

- name: Template configuration file to connect-distributed.properties
  template:
    src: connect-distributed.properties.j2
    dest: '{{ kafka_dir }}/config/connect-distributed.properties'
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0644
  tags:
    - kafka_config

- name: Template configuration file to producer.properties
  template:
    src: producer.properties.j2
    dest: '{{ kafka_dir }}/config/producer.properties'
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0644
  tags:
    - kafka_config

- name: Template configuration file to consumer.properties
  template:
    src: consumer.properties.j2
    dest: '{{ kafka_dir }}/config/consumer.properties'
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0644
  tags:
    - kafka_config

- name: Template configuration file to log4j.properties
  template:
    src: log4j.properties.j2
    dest: '{{ kafka_dir }}/config/log4j.properties'
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0644
  tags:
    - kafka_config

- name: Create symlink to kafka kraft server properties file
  file:
    src: '{{ kafka_dir }}/config/kraft/server.properties'
    dest: /etc/kafka/server.properties
    state: link
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  when: kafka_use_kraft
  tags:
    - kafka_config

- name: Create symlink to kafka server properties file
  file:
    src: '{{ kafka_dir }}/config/server.properties'
    dest: /etc/kafka/server.properties
    state: link
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  when: not kafka_use_kraft
  tags:
    - kafka_config

- name: Create symlink to kafka connect standalone properties file
  file:
    src: '{{ kafka_dir }}/config/connect-standalone.properties'
    dest: /etc/kafka/connect-standalone.properties
    state: link
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  tags:
    - kafka_config

- name: Create symlink to kafka connect distributed properties file
  file:
    src: '{{ kafka_dir }}/config/connect-distributed.properties'
    dest: /etc/kafka/connect-distributed.properties
    state: link
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  tags:
    - kafka_config

- name: Create symlink to kafka producer properties file
  file:
    src: '{{ kafka_dir }}/config/producer.properties'
    dest: /etc/kafka/producer.properties
    state: link
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  tags:
    - kafka_config

- name: Create symlink to kafka consumer properties file
  file:
    src: '{{ kafka_dir }}/config/consumer.properties'
    dest: /etc/kafka/consumer.properties
    state: link
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  tags:
    - kafka_config

- name: Create symlink to kafka log4j properties file
  file:
    src: '{{ kafka_dir }}/config/log4j.properties'
    dest: /etc/kafka/log4j.properties
    state: link
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  tags:
    - kafka_config

- name: Template Kafka init.d service file
  template:
    src: kafka.initd.j2
    dest: /etc/init.d/kafka
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0644
  notify:
    - Reload initd
    - Restart kafka service
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version == '6'
  tags:
    - kafka_service

- name: Template kafka systemd service
  template:
    src: kafka.service.j2
    dest: '{{ kafka_unit_path }}'
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0644
  notify:
    - Restart kafka systemd
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version > '6' or ansible_os_family == "Debian"
  tags:
    - kafka_service

- name: Start the kafka service
  service:
    name: kafka
    state: started
    enabled: yes
  when: kafka_start
  tags:
    - kafka_service
