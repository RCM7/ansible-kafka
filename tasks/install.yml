---

- name: "Load OS vars"
  include_tasks: vars.yml

- name: Create kafka group
  group:
    name: '{{ kafka_group }}'
    state: present
    system: yes
  when: kafka_create_user_group | bool
  tags:
    - kafka_group

- name: Create kafka user
  user:
    name: '{{ kafka_user }}'
    group: '{{ kafka_group }}'
    state: present
    createhome: no
    system: yes
  when: kafka_create_user_group | bool
  tags:
    - kafka_user

- name: Check if Kafka has already been downloaded and unpacked
  stat:
    path: '{{ kafka_dir }}_{{ kafka_scala_version }}-{{ kafka_version }}'
  register: dir

- name: Download Apache Kafka
  get_url:
    url: '{{ kafka_download_base_url }}/{{ kafka_version }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz'
    dest: /tmp
    validate_certs: '{{ kafka_download_validate_certs }}'
  when: not dir.stat.exists
  tags:
    - kafka_download

- name: Unpack Apache Kafka
  unarchive:
    src: /tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
    dest: '{{ kafka_root_dir }}'
    copy: no
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  when: not dir.stat.exists
  tags:
    - kafka_unpack

- name: Create symlink to kafka installation directory
  file:
    src: '{{ kafka_root_dir }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}'
    dest: '{{ kafka_dir }}'
    state: link
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  tags:
    - kafka_dirs

- name: Create directory for kafka data log files
  file:
    path: '{{ item }}'
    state: directory
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0755
  with_items: "{{ kafka_data_log_dirs.split(',') }}"
  tags:
    - kafka_dirs

- name: Create directory for kafka application logs
  file:
    path: '{{ kafka_log_dir }}'
    state: directory
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0755
  tags:
    - kafka_dirs

- name: Register '{{ kafka_dir }}/logs' directory status
  stat:
    path: '{{ kafka_dir }}/logs'
  register: application_logs_dir
  tags:
    - kafka_dirs

- name: Create symlink to application log directory
  file:
    src: '{{ kafka_log_dir }}'
    dest: '{{ kafka_dir }}/logs'
    state: link
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0755
    follow: no
  when: not application_logs_dir.stat.exists
  tags:
    - kafka_dirs

- name: Create directory for symlink to kafka configuration files
  file:
    path: /etc/kafka
    state: directory
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
    mode: 0755
  tags:
    - kafka_dirs

- name: Delete the kafka archive file
  file:
    path: /tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
    state: absent
  tags:
    - kafka_cleanup
